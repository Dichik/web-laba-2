{"ast":null,"code":"var _jsxFileName = \"/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // import sendEmail from './Mailer'\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [submitBlocked, setSubmitBlocked] = useState(false);\n\n  const notEmpty = str => {\n    return str !== \"\";\n  };\n\n  const checkEmail = () => {\n    return true;\n  };\n\n  const submitData = () => {\n    if (!submitBlocked) {\n      setSubmitBlocked(true);\n\n      if (notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n        sendEmail(name, email, textMessage);\n      }\n    }\n  };\n\n  const resetData = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setTextMessage(\"\");\n    setSubmitBlocked(false);\n  };\n\n  const allFieldsEmpty = () => {\n    return email === \"\" && name === \"\" && textMessage === \"\";\n  };\n\n  const sendEmail = (name, email, textMessage) => {\n    console.log(name);\n  }; //  TODO add database connection (Supabase, or another)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      className: \"inputField nameInputField centerBlock\",\n      value: name,\n      onChange: event => setName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      className: \"inputField emailInputField centerBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message here\",\n      value: textMessage,\n      onChange: event => setTextMessage(event.target.value),\n      className: \"inputField textField centerBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock submitButton\",\n      onClick: submitData,\n      disabled: submitBlocked,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock resetButton\",\n      disabled: allFieldsEmpty(),\n      onClick: resetData,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n} //TODO add validation for inputs\n//TODO add css files\n\n\n_s(App, \"Ki3BTmYGdRBaxcR2Iie27tqrBu0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js"],"names":["useState","App","name","setName","email","setEmail","textMessage","setTextMessage","submitBlocked","setSubmitBlocked","notEmpty","str","checkEmail","submitData","sendEmail","resetData","allFieldsEmpty","console","log","event","target","value"],"mappings":"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","sourcesContent":["import './App.css';\n// import sendEmail from './Mailer'\nimport {useState} from \"react\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [textMessage, setTextMessage] = useState(\"\");\n    const [submitBlocked, setSubmitBlocked] = useState(false);\n\n    const notEmpty = (str) => {return (str !== \"\");}\n\n    const checkEmail = () => {\n        return true;\n    }\n\n    const submitData = () => {\n        if(!submitBlocked) {\n            setSubmitBlocked(true);\n            if(notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n                sendEmail(name, email, textMessage);\n            }\n        }\n    }\n\n    const resetData = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setTextMessage(\"\");\n        setSubmitBlocked(false);\n    }\n\n    const allFieldsEmpty = () => {\n        return (email === \"\" && name === \"\" && textMessage === \"\");\n    }\n\n    const sendEmail = (name, email, textMessage) => {\n        console.log(name)\n    }\n\n  //  TODO add database connection (Supabase, or another)\n  return (\n    <div>\n        {/*TODO message about a successfully sent data*/}\n        {/*TODO send email with a text*/}\n        {/*TODO add header*/}\n        <input type={\"name\"} placeholder={\"Enter your name\"}\n               className={\"inputField nameInputField centerBlock\"}\n               value={name}\n               onChange={event => setName(event.target.value)}\n        />\n        <input type={\"email\"} placeholder={\"Enter your email\"}\n               value={email}\n               onChange={(event => setEmail(event.target.value))}\n               className={\"inputField emailInputField centerBlock\"} />\n        <input type={\"text\"} placeholder={\"Enter your message here\"}\n               value={textMessage}\n               onChange={event => setTextMessage(event.target.value)}\n               className={\"inputField textField centerBlock\"} />\n        {/*TODO add speener*/}\n        <button className={\"centerBlock submitButton\"}\n                onClick={submitData}\n                disabled={submitBlocked}\n        >\n            Submit\n        </button>\n        <button className={\"centerBlock resetButton\"}\n                disabled={allFieldsEmpty()}\n                onClick={resetData}>\n            Reset\n        </button>\n    {/*    TODO add an ability to enter a text (message) - no null*/}\n    </div>\n  );\n}\n//TODO add validation for inputs\n//TODO add css files\nexport default App;\n"]},"metadata":{},"sourceType":"module"}