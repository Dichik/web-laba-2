{"ast":null,"code":"var _jsxFileName = \"/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Spinner from \"./Spinner\";\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [submitBlocked, setSubmitBlocked] = useState(false);\n  const [activeField, setActiveField] = useState(0);\n  const [sendingEmail, setSendingEmail] = useState(false);\n  let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/;\n\n  const showErrorMessage = (str, errorNumber) => {\n    if (errorNumber === 1) {\n      alert(\"There is an empty string...\");\n    } else {\n      alert(\"There is something wrong with your email...\");\n    }\n  };\n\n  const notEmpty = str => {\n    if (str === \"\") {\n      showErrorMessage(str, 1);\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkEmail = () => {\n    if (!regEmail.test(email)) {\n      showErrorMessage(email, 2);\n      return false;\n    }\n\n    return true;\n  };\n\n  const submitData = () => {\n    if (!submitBlocked) {\n      setSubmitBlocked(true);\n\n      if (notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n        setSendingEmail(true);\n        sendEmail(name, email, textMessage);\n        setSendingEmail(false);\n        resetData();\n      } else setSubmitBlocked(false);\n    }\n  }; // TODO ліміт запитів до 1000\n\n\n  const resetData = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setTextMessage(\"\");\n    setSubmitBlocked(false);\n    setActiveField(0);\n  };\n\n  const allFieldsEmpty = () => {\n    return email === \"\" && name === \"\" && textMessage === \"\";\n  };\n\n  const sendEmail = async () => {\n    emailjs.init(\"user_AJGy3zMpNl2Rxs4CFFafD\");\n    let form = {\n      name: name,\n      email: email,\n      textMessage: textMessage\n    };\n    emailjs.send('service_tauvzqc', 'template_26nh4ab', form).then(result => {\n      console.log(result.text);\n    }, error => {\n      console.log(error.text);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !sendingEmail ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"centerBlock\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sending message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        placeholder: \"Enter your name\",\n        className: \"inputField nameInputField centerBlock\",\n        value: name,\n        onChange: event => setName(event.target.value),\n        onFocus: () => setActiveField(1),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 1 ? '3px solid #10fc2a' : null\n        } // TODO light-green color if a field is filled\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: event => setEmail(event.target.value),\n        onFocus: () => setActiveField(2),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 2 ? '3px solid #10fc2a' : null\n        },\n        className: \"inputField emailInputField centerBlock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your message here\",\n        value: textMessage,\n        onChange: event => setTextMessage(event.target.value),\n        className: \"inputField textField centerBlock\",\n        onFocus: () => setActiveField(3),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 3 ? '3px solid #10fc2a' : null\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerBlock submitButton\",\n        onClick: submitData,\n        disabled: submitBlocked,\n        style: {\n          background: submitBlocked ? '#05acbb' : null\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerBlock resetButton\",\n        disabled: allFieldsEmpty(),\n        onClick: resetData,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this) : Spinner()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this);\n} //TODO add css files\n\n\n_s(App, \"TpAwstSBUanVp+b8fKLBCyqKXc0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js"],"names":["useState","Spinner","emailjs","App","name","setName","email","setEmail","textMessage","setTextMessage","submitBlocked","setSubmitBlocked","activeField","setActiveField","sendingEmail","setSendingEmail","regEmail","showErrorMessage","str","errorNumber","alert","notEmpty","checkEmail","test","submitData","sendEmail","resetData","allFieldsEmpty","init","form","send","then","result","console","log","text","error","event","target","value","borderBottom","background"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Spinner from \"./Spinner\";\nimport emailjs from 'emailjs-com'\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [textMessage, setTextMessage] = useState(\"\");\n    const [submitBlocked, setSubmitBlocked] = useState(false);\n    const [activeField, setActiveField] = useState(0);\n    const [sendingEmail, setSendingEmail] = useState(false);\n\n    let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/\n\n    const showErrorMessage = (str, errorNumber) => {\n        if(errorNumber === 1) {\n            alert(\"There is an empty string...\");\n        } else {\n            alert(\"There is something wrong with your email...\");\n        }\n    }\n\n    const notEmpty = (str) => {\n        if(str === \"\") {\n            showErrorMessage(str, 1);\n            return false;\n        }\n        return true;\n    }\n\n    const checkEmail = () => {\n        if(!regEmail.test(email)) {\n            showErrorMessage(email, 2)\n            return false;\n        }\n        return true;\n    }\n\n    const submitData = () => {\n        if(!submitBlocked) {\n            setSubmitBlocked(true);\n            if(notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n                setSendingEmail(true);\n                sendEmail(name, email, textMessage);\n                setSendingEmail(false);\n                resetData();\n            } else setSubmitBlocked(false);\n        }\n    }\n\n    // TODO ліміт запитів до 1000\n\n    const resetData = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setTextMessage(\"\");\n        setSubmitBlocked(false);\n        setActiveField(0);\n    }\n\n    const allFieldsEmpty = () => {\n        return (email === \"\" && name === \"\" && textMessage === \"\");\n    }\n\n    const sendEmail = async () => {\n        emailjs.init(\"user_AJGy3zMpNl2Rxs4CFFafD\");\n        let form = {\n            name: name,\n            email: email,\n            textMessage: textMessage\n        }\n        emailjs.send('service_tauvzqc', 'template_26nh4ab', form)\n            .then((result) => {\n                console.log(result.text);\n            }, (error) => {\n                console.log(error.text);\n            });\n    }\n\n  return (\n      <div>\n          { !sendingEmail ?\n          <div>\n              {/*TODO message about a successfully sent data*/}\n              {/*TODO send email with a text*/}\n              {/*TODO add header*/}\n              <header className={\"centerBlock\"}>\n                  <h1>Sending message</h1>\n              </header>\n              <input type={\"name\"} placeholder={\"Enter your name\"}\n                     className={\"inputField nameInputField centerBlock\"}\n                     value={name}\n                     onChange={event => setName(event.target.value)}\n                     onFocus={() => setActiveField(1)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 1 ? '3px solid #10fc2a' : null\n                     }}\n                  // TODO light-green color if a field is filled\n              />\n              <input type={\"email\"} placeholder={\"Enter your email\"}\n                     value={email}\n                     onChange={(event => setEmail(event.target.value))}\n                     onFocus={() => setActiveField(2)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 2 ? '3px solid #10fc2a' : null\n                     }}\n                     className={\"inputField emailInputField centerBlock\"}\n              />\n              {/*TODO red color if a field has error for a 3 seconds*/}\n              <input type={\"text\"} placeholder={\"Enter your message here\"}\n                     value={textMessage}\n                     onChange={event => setTextMessage(event.target.value)}\n                     className={\"inputField textField centerBlock\"}\n                     onFocus={() => setActiveField(3)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 3 ? '3px solid #10fc2a' : null\n                     }}\n              />\n              <button className={\"centerBlock submitButton\"}\n                      onClick={submitData}\n                      disabled={submitBlocked}\n                      style={{\n                          background: submitBlocked ? '#05acbb' : null\n                      }}\n              >\n                  Submit\n              </button>\n              <button className={\"centerBlock resetButton\"}\n                      disabled={allFieldsEmpty()}\n                      onClick={resetData}>\n                  Clear\n              </button>\n          </div> : Spinner()\n          }\n      </div>\n  );\n}\n//TODO add css files\nexport default App;\n"]},"metadata":{},"sourceType":"module"}