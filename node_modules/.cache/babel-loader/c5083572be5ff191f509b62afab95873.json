{"ast":null,"code":"var _jsxFileName = \"/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [submitBlocked, setSubmitBlocked] = useState(false);\n\n  const submitData = () => {\n    if (!submitBlocked) {\n      setSubmitBlocked(true);\n      console.log(name);\n    }\n  }; //  TODO add database connection (Supabase, or another)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      className: \"inputField nameInputField centerBlock\",\n      value: name,\n      onChange: event => setName(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      className: \"inputField emailInputField centerBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message here\",\n      className: \"inputField textField centerBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock submitButton\",\n      onClick: submitData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock resetButton\",\n      onClick: resetData,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n} //TODO frame for inputs fields = [name, email, phone, message]\n//TODO add validation for inputs\n//TODO add css files\n\n\n_s(App, \"Ki3BTmYGdRBaxcR2Iie27tqrBu0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js"],"names":["useState","App","name","setName","email","setEmail","textMessage","setTextMessage","submitBlocked","setSubmitBlocked","submitData","console","log","event","target","value","resetData"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACrB,QAAG,CAACF,aAAJ,EAAmB;AACfC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH;AACJ,GALD,CANW,CAab;;;AACA,sBACE;AAAA,4BAEI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,WAAW,EAAE,iBAAlC;AACO,MAAA,SAAS,EAAE,uCADlB;AAEO,MAAA,KAAK,EAAEA,IAFd;AAGO,MAAA,QAAQ,EAAEW,KAAK,IAAIV,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHjC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAO,MAAA,IAAI,EAAE,OAAb;AAAsB,MAAA,WAAW,EAAE,kBAAnC;AACO,MAAA,SAAS,EAAE;AADlB;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,WAAW,EAAE,yBAAlC;AACO,MAAA,SAAS,EAAE;AADlB;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAQ,MAAA,SAAS,EAAE,0BAAnB;AAA+C,MAAA,OAAO,EAAEL,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI;AAAQ,MAAA,SAAS,EAAE,yBAAnB;AAA8C,MAAA,OAAO,EAAEM,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,C,CACD;AACA;AACA;;;GAxCSf,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [textMessage, setTextMessage] = useState(\"\");\n    const [submitBlocked, setSubmitBlocked] = useState(false);\n\n    const submitData = () => {\n        if(!submitBlocked) {\n            setSubmitBlocked(true);\n            console.log(name);\n        }\n    }\n\n  //  TODO add database connection (Supabase, or another)\n  return (\n    <div>\n        {/*TODO add header*/}\n        <input type={\"name\"} placeholder={\"Enter your name\"}\n               className={\"inputField nameInputField centerBlock\"}\n               value={name}\n               onChange={event => setName(event.target.value)}\n        />\n        <input type={\"email\"} placeholder={\"Enter your email\"}\n               className={\"inputField emailInputField centerBlock\"} />\n        <input type={\"text\"} placeholder={\"Enter your message here\"}\n               className={\"inputField textField centerBlock\"} />\n        {/*TODO add speener*/}\n        <button className={\"centerBlock submitButton\"} onClick={submitData}>\n            Submit\n        </button>\n        <button className={\"centerBlock resetButton\"} onClick={resetData}>\n            Reset\n        </button>\n    {/*    TODO block button submit*/}\n    {/*    TODO add an ability to enter a text (message) - no null*/}\n    </div>\n  );\n}\n//TODO frame for inputs fields = [name, email, phone, message]\n//TODO add validation for inputs\n//TODO add css files\nexport default App;\n"]},"metadata":{},"sourceType":"module"}