{"ast":null,"code":"var _jsxFileName = \"/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport Spinner from \"./Spinner\";\nimport emailjs from 'emailjs-com';\nimport Mailer from \"./Mailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [submitBlocked, setSubmitBlocked] = useState(false);\n  const [activeField, setActiveField] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const rateLimit = require(\"express-rate-limit\");\n\n  const mailer = new Mailer();\n  const limiter = rateLimit({\n    windowsMs: 15 * 60 * 1000,\n    max: 100\n  });\n  let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/;\n\n  const notEmpty = str => {\n    if (str === \"\") {\n      showErrorMessage(str, 1);\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkEmail = () => {\n    if (!regEmail.test(email)) {\n      showErrorMessage(email, 2);\n      return false;\n    }\n\n    return true;\n  };\n\n  const wait = async () => {\n    setTimeout(() => console.log(\"Loading...\"), 5000);\n  };\n\n  const submitData = async () => {\n    if (!submitBlocked) {\n      setSubmitBlocked(true);\n\n      if (notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n        setLoading(true);\n        await wait();\n        await mailer.sendEmail(name, email, textMessage);\n      } else setSubmitBlocked(false);\n    }\n  }; // TODO ліміт запитів до 1000\n\n\n  const resetData = async () => {\n    setName(\"\");\n    setEmail(\"\");\n    setTextMessage(\"\");\n    setSubmitBlocked(false);\n    setActiveField(0);\n    setLoading(false);\n  };\n\n  const allFieldsEmpty = () => {\n    return email === \"\" && name === \"\" && textMessage === \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"headerClass\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sending message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        placeholder: \"Enter your name\",\n        className: \"inputField nameInputField centerBlock\",\n        value: name,\n        onChange: event => setName(event.target.value),\n        onFocus: () => setActiveField(1),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 1 ? '3px solid #10fc2a' : null\n        } // TODO light-green color if a field is filled\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: event => setEmail(event.target.value),\n        onFocus: () => setActiveField(2),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 2 ? '3px solid #10fc2a' : null\n        },\n        className: \"inputField emailInputField centerBlock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your message here\",\n        value: textMessage,\n        onChange: event => setTextMessage(event.target.value),\n        className: \"inputField textField centerBlock\",\n        onFocus: () => setActiveField(3),\n        onBlur: () => setActiveField(0),\n        style: {\n          borderBottom: activeField === 3 ? '3px solid #10fc2a' : null\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerBlock submitButton\",\n        onClick: submitData,\n        disabled: submitBlocked,\n        style: {\n          background: submitBlocked ? '#05acbb' : null\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"centerBlock resetButton\",\n        disabled: allFieldsEmpty(),\n        onClick: resetData,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this) : Spinner()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"uWaB+qMITNZrz/YUzJwVMzHBSAU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js"],"names":["useState","Spinner","emailjs","Mailer","App","name","setName","email","setEmail","textMessage","setTextMessage","submitBlocked","setSubmitBlocked","activeField","setActiveField","loading","setLoading","rateLimit","require","mailer","limiter","windowsMs","max","regEmail","notEmpty","str","showErrorMessage","checkEmail","test","wait","setTimeout","console","log","submitData","sendEmail","resetData","allFieldsEmpty","event","target","value","borderBottom","background"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState} from \"react\";\nimport Spinner from \"./Spinner\";\nimport emailjs from 'emailjs-com'\nimport Mailer from \"./Mailer\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [textMessage, setTextMessage] = useState(\"\");\n    const [submitBlocked, setSubmitBlocked] = useState(false);\n    const [activeField, setActiveField] = useState(0);\n    const [loading, setLoading] = useState(false);\n\n    const rateLimit = require(\"express-rate-limit\")\n\n    const mailer = new Mailer()\n\n    const limiter = rateLimit({\n      windowsMs: 15 * 60 * 1000,\n      max: 100\n    });\n\n    let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/\n\n\n\n    const notEmpty = (str) => {\n        if(str === \"\") {\n            showErrorMessage(str, 1);\n            return false;\n        }\n        return true;\n    }\n\n    const checkEmail = () => {\n        if(!regEmail.test(email)) {\n            showErrorMessage(email, 2)\n            return false;\n        }\n        return true;\n    }\n\n    const wait = async () => {\n        setTimeout(() => console.log(\"Loading...\"), 5000)\n    }\n\n    const submitData = async () => {\n        if (!submitBlocked) {\n            setSubmitBlocked(true);\n            if (notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n                setLoading(true)\n                await wait()\n                await mailer.sendEmail(name, email, textMessage)\n            } else setSubmitBlocked(false);\n        }\n    }\n\n    // TODO ліміт запитів до 1000\n\n    const resetData = async () => {\n        setName(\"\");\n        setEmail(\"\");\n        setTextMessage(\"\");\n        setSubmitBlocked(false);\n        setActiveField(0);\n        setLoading(false)\n    }\n\n    const allFieldsEmpty = () => {\n        return (email === \"\" && name === \"\" && textMessage === \"\");\n    }\n\n  return (\n      <div>\n          { !loading ?\n          <div>\n              <header className={\"headerClass\"}>\n                  <h1>Sending message</h1>\n              </header>\n              <input type={\"name\"} placeholder={\"Enter your name\"}\n                     className={\"inputField nameInputField centerBlock\"}\n                     value={name}\n                     onChange={event => setName(event.target.value)}\n                     onFocus={() => setActiveField(1)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 1 ? '3px solid #10fc2a' : null\n                     }}\n                  // TODO light-green color if a field is filled\n              />\n              <input type={\"email\"} placeholder={\"Enter your email\"}\n                     value={email}\n                     onChange={(event => setEmail(event.target.value))}\n                     onFocus={() => setActiveField(2)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 2 ? '3px solid #10fc2a' : null\n                     }}\n                     className={\"inputField emailInputField centerBlock\"}\n              />\n              {/*TODO red color if a field has error for a 3 seconds*/}\n              <input type={\"text\"} placeholder={\"Enter your message here\"}\n                     value={textMessage}\n                     onChange={event => setTextMessage(event.target.value)}\n                     className={\"inputField textField centerBlock\"}\n                     onFocus={() => setActiveField(3)}\n                     onBlur={() => setActiveField(0)}\n                     style={{\n                         borderBottom: activeField === 3 ? '3px solid #10fc2a' : null\n                     }}\n              />\n              <button className={\"centerBlock submitButton\"}\n                      onClick={submitData}\n                      disabled={submitBlocked}\n                      style={{\n                          background: submitBlocked ? '#05acbb' : null\n                      }}\n              >\n                  Submit\n              </button>\n              <button className={\"centerBlock resetButton\"}\n                      disabled={allFieldsEmpty()}\n                      onClick={resetData}>\n                  Clear\n              </button>\n          </div> : Spinner()\n          }\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}