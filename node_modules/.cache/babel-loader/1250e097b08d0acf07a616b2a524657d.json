{"ast":null,"code":"var _jsxFileName = \"/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css'; // import sendEmail from './Mailer'\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [submitBlocked, setSubmitBlocked] = useState(false);\n  const [activeField, setActiveField] = useState(0);\n  let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/;\n\n  const showErrorMessage = (str, errorNumber) => {// 1 - empty string in name or text\n    // 2 - smth wrong with email\n  };\n\n  const notEmpty = str => {\n    if (str === \"\") {\n      showErrorMessage(str, 1);\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkEmail = () => {\n    if (!regEmail.test(email)) {\n      showErrorMessage(email, 2);\n      return false;\n    }\n\n    return true;\n  };\n\n  const submitData = () => {\n    if (!submitBlocked) {\n      setSubmitBlocked(true);\n\n      if (notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n        sendEmail(name, email, textMessage);\n      }\n    }\n  };\n\n  const resetData = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setTextMessage(\"\");\n    setSubmitBlocked(false);\n    setActiveField(0);\n  };\n\n  const allFieldsEmpty = () => {\n    return email === \"\" && name === \"\" && textMessage === \"\";\n  };\n\n  const sendEmail = (name, email, textMessage) => {// console.log(name)\n  }; //  TODO add database connection (Supabase, or another)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onFocus: () => setActiveField(0),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      className: \"inputField nameInputField centerBlock\",\n      value: name,\n      onChange: event => setName(event.target.value) // onFocus={() => setActiveField(1)}\n      // style={{\n      //     borderBottom: activeField === 1 ? '3px solid green' : '3px solid blue'\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      onFocus: () => setActiveField(2),\n      style: {\n        borderBottom: activeField === 2 ? '3px solid green' : '3px solid blue'\n      },\n      className: \"inputField emailInputField centerBlock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your message here\",\n      value: textMessage,\n      onChange: event => setTextMessage(event.target.value),\n      className: \"inputField textField centerBlock\" // onFocus={() => setActiveField(3)}\n      // style={{\n      //     borderBottom: activeField === 3 ? '3px solid green' : '3px solid blue'\n      // }}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock submitButton\",\n      onClick: submitData,\n      disabled: submitBlocked,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centerBlock resetButton\",\n      disabled: allFieldsEmpty(),\n      onClick: resetData,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} //TODO add css files\n\n\n_s(App, \"W6aSJgzUmMPFJvfli5ngp8oiR04=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dichik/PhpstormProjects/web-laba-2/my-app/src/App.js"],"names":["useState","App","name","setName","email","setEmail","textMessage","setTextMessage","submitBlocked","setSubmitBlocked","activeField","setActiveField","regEmail","showErrorMessage","str","errorNumber","notEmpty","checkEmail","test","submitData","sendEmail","resetData","allFieldsEmpty","event","target","value","borderBottom"],"mappings":"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","sourcesContent":["import './App.css';\n// import sendEmail from './Mailer'\nimport {useState} from \"react\";\n\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [textMessage, setTextMessage] = useState(\"\");\n    const [submitBlocked, setSubmitBlocked] = useState(false);\n    const [activeField, setActiveField] = useState(0);\n\n    let regEmail = /^[a-zA-Z-0-9]+@[a-zA-Z-0-9]+\\.[A-Za-z]+$/\n\n    const showErrorMessage = (str, errorNumber) => {\n        // 1 - empty string in name or text\n        // 2 - smth wrong with email\n    }\n\n    const notEmpty = (str) => {\n        if(str === \"\") {\n            showErrorMessage(str, 1);\n            return false;\n        }\n        return true;\n    }\n\n    const checkEmail = () => {\n        if(!regEmail.test(email)) {\n            showErrorMessage(email, 2)\n            return false;\n        }\n        return true;\n    }\n\n    const submitData = () => {\n        if(!submitBlocked) {\n            setSubmitBlocked(true);\n            if(notEmpty(name) && notEmpty(textMessage) && checkEmail()) {\n                sendEmail(name, email, textMessage);\n            }\n        }\n    }\n\n    const resetData = () => {\n        setName(\"\");\n        setEmail(\"\");\n        setTextMessage(\"\");\n        setSubmitBlocked(false);\n        setActiveField(0);\n    }\n\n    const allFieldsEmpty = () => {\n        return (email === \"\" && name === \"\" && textMessage === \"\");\n    }\n\n    const sendEmail = (name, email, textMessage) => {\n        // console.log(name)\n    }\n\n  //  TODO add database connection (Supabase, or another)\n  return (\n    <div onFocus={() => setActiveField(0)}>\n        {/*TODO message about a successfully sent data*/}\n        {/*TODO send email with a text*/}\n        {/*TODO add header*/}\n        <input type={\"name\"} placeholder={\"Enter your name\"}\n               className={\"inputField nameInputField centerBlock\"}\n               value={name}\n               onChange={event => setName(event.target.value)}\n               // onFocus={() => setActiveField(1)}\n               // style={{\n               //     borderBottom: activeField === 1 ? '3px solid green' : '3px solid blue'\n               // }}\n        />\n        <input type={\"email\"} placeholder={\"Enter your email\"}\n               value={email}\n               onChange={(event => setEmail(event.target.value))}\n               onFocus={() => setActiveField(2)}\n               style={{\n                   borderBottom: activeField === 2 ? '3px solid green' : '3px solid blue'\n               }}\n               className={\"inputField emailInputField centerBlock\"} />\n        <input type={\"text\"} placeholder={\"Enter your message here\"}\n               value={textMessage}\n               onChange={event => setTextMessage(event.target.value)}\n               className={\"inputField textField centerBlock\"}\n               // onFocus={() => setActiveField(3)}\n               // style={{\n               //     borderBottom: activeField === 3 ? '3px solid green' : '3px solid blue'\n               // }}\n        />\n        {/*TODO add speener*/}\n        <button className={\"centerBlock submitButton\"}\n                onClick={submitData}\n                disabled={submitBlocked}\n        >\n            Submit\n        </button>\n        <button className={\"centerBlock resetButton\"}\n                disabled={allFieldsEmpty()}\n                onClick={resetData}>\n            Reset\n        </button>\n    </div>\n  );\n}\n//TODO add css files\nexport default App;\n"]},"metadata":{},"sourceType":"module"}